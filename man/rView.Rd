% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rView.R
\name{rView}
\alias{rView}
\title{Simplify viewing of R objects on remote machine via RStudio, exploiting rmote server}
\usage{
rView(obj, port = NULL)
}
\arguments{
\item{obj}{The R object to view.}

\item{port}{The number of the port to access on the local machine to download objects.
Note that you can give the command \code{rView(port = XXXX)} without any reference
to \code{obj}, because \code{obj} is not used within the function before exiting it
when simply updating the port.}
}
\description{
This function is designed to be used on both the remote RStudio session and
also on the local RStudio session.  It does different things in each session.
}
\details{
On the remote session, which is identified by having \code{getOption("rmote_server_dir")} being
nonNULL, \code{rView(x)} saves the object x to an rds file called x.rds in a directory
called \code{rview_objs} in the \code{rmote_server_dir}.  If it is called by piping an
output into \code{rView()},
then the object gets written to \code{__dot.rds}.

On the local session, calling \code{rView(x)} downloads \code{x.rds} from the
forwarded port that is hosting files from the remote machine at \code{rmote_server_dir},
then it sends it to the \code{View()} command, to view in an RStudio data browser
window, that it names "r:x".
Piping output into \code{rView} or calling \code{rView(.)} downloads the object in
\code{__dot.rds} and views it in an RStudio data browser window (named "r:.").

In the local session, if \code{getOption("rview_port")} is not defined (as it likely
will not be in a new session) then you can set it to what it should be using the
port argument.  For example, if the remote machine is forwarding rmote traffic
to port 4321, you would use \code{rView(port = 4321)}.

See the vignette for information about setting up port forwarding, and how to use
this function in different client-server environments.
}
